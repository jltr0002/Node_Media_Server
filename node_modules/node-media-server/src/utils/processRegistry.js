const ffmpegProcesses = new Map();

/**
 * Stores the ffmpeg process using a unique key (e.g., stream name or id).
 *
 * @param {string} key - Unique identifier for the stream.
 * @param {ChildProcess} process - The ffmpeg process.
 */
function addProcess(key, process) {
  ffmpegProcesses.set(key, process);
}

/**
 * Retrieves the ffmpeg process for a given stream.
 *
 * @param {string} key - Unique identifier for the stream.
 * @returns {ChildProcess | undefined}
 */
function getProcess(key) {
  return ffmpegProcesses.get(key);
}

/**
 * Removes the process from the registry.
 *
 * @param {string} key - Unique identifier for the stream.
 */
function removeProcess(key) {
  ffmpegProcesses.delete(key);
}

/**
 * Terminates the ffmpeg process associated with the key, if it exists.
 *
 * @param {string} key - Unique identifier for the stream.
 */
function stopProcess(key) {
  const proc = ffmpegProcesses.get(key);
  if (proc) {
    proc.kill('SIGINT');
    ffmpegProcesses.delete(key);
    console.log(`Terminated ffmpeg process for stream: ${key}`);
  }
}

module.exports = {
  addProcess,
  getProcess,
  removeProcess,
  stopProcess,
};
