const fs   = require('fs');
const path = require('path');

// Location of avaliable_multimedia/streams.json
const ROOT_DIR        = path.resolve(__dirname, '../../../../avaliable_multimedia');
const STREAMS_JSON    = path.join(ROOT_DIR, 'streams.json');

/**
 * Reads the current stream list or returns an empty array.
 * @returns {Array<{name:string,url:string}>}
 */
function readStreams() {
  try {
    return JSON.parse(fs.readFileSync(STREAMS_JSON, 'utf8'));
  } catch {
    return [];
  }
}

/**
 * Persists the stream list with prettyâ€‘print.
 * @param {Array<{name:string,url:string}>} data
 */
function writeStreams(data) {
  fs.mkdirSync(ROOT_DIR, { recursive: true });
  fs.writeFileSync(STREAMS_JSON, JSON.stringify(data, null, 2));
}

/**
 * Adds (or updates) a stream entry.
 * @param {{name:string,url:string}} stream
 */
function addStream(stream) {
  const list = readStreams();
  const idx  = list.findIndex(s => s.name === stream.name);
  if (idx === -1) list.push(stream);
  else            list[idx] = stream;
  writeStreams(list);
}

/**
 * Removes a stream entry by name.
 * @param {string} name
 */
function removeStream(name) {
  const list = readStreams().filter(s => s.name !== name);
  writeStreams(list);
}

module.exports = { addStream, removeStream };
